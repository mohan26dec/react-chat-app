{"ast":null,"code":"var _jsxFileName = \"/Users/mohant/Documents/Learning/react-chat-app/src/components/SendMessage.js\",\n    _s = $RefreshSig$();\n\n// Import the functions from the SDKs\nimport React, { useState } from 'react';\nimport { db, auth } from '../firebase/firebase';\nimport firebase from 'firebase/compat/app';\nimport { storage } from '../firebase/firebase';\nimport { Input, Button } from '@mui/material/';\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendMessage = ({\n  scroll\n}) => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [showEmojis, setShowEmojis] = useState(false); // Add emojis function\n\n  const addEmoji = e => {\n    let sym = e.unified.split(\"-\");\n    let codesArray = [];\n    sym.forEach(el => codesArray.push(\"0x\" + el));\n    let emoji = String.fromCodePoint(...codesArray);\n    setInput(input + emoji);\n  }; // form on submit send message function \n\n\n  const sendMessage = e => {\n    // if(input.trim().length === 0) {\n    //     return;\n    // }\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    const file = e.target[0].files[0];\n    console.log(file);\n\n    const uploadFiles = () => {\n      const uploadTask = storage.ref(`files/${file.name}`).put(file);\n      uploadTask.on('state_change', snapshot => {}, error => console.log(error), () => {\n        storage.ref(\"files\").child(files.name).getDownloadURL().then(url => {\n          console.log(url);\n        });\n      });\n    }; //add the form details to the database\n\n\n    db.collection('messages').add({\n      text: input,\n      photoURL,\n      uid,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput('');\n    scroll.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendMsg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          onClick: () => setShowEmojis(!showEmojis),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"icon\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              \"stroke-linecap\": \"round\",\n              \"stroke-linejoin\": \"round\",\n              \"stroke-width\": \"2\",\n              d: \"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: '78%',\n            fontSize: '15px',\n            fontWeight: '550',\n            marginLeft: '5px',\n            marginBottom: '-3px'\n          },\n          placeholder: \"Message...\",\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '18%',\n            fontSize: '15px',\n            fontWeight: '550',\n            margin: '4px 5% -13px 5%',\n            maxWidth: '200px'\n          },\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), showEmojis && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            onSelect: addEmoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendMessage, \"k1I8On0XgZqXP0izogpq9V/qKtM=\");\n\n_c = SendMessage;\nexport default SendMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"sources":["/Users/mohant/Documents/Learning/react-chat-app/src/components/SendMessage.js"],"names":["React","useState","db","auth","firebase","storage","Input","Button","Picker","SendMessage","scroll","input","setInput","showEmojis","setShowEmojis","addEmoji","e","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","sendMessage","preventDefault","uid","photoURL","currentUser","file","target","files","console","log","uploadFiles","uploadTask","ref","name","put","on","snapshot","error","child","getDownloadURL","then","url","collection","add","text","createdAt","firestore","FieldValue","serverTimestamp","current","scrollIntoView","behavior","width","fontSize","fontWeight","marginLeft","marginBottom","value","margin","maxWidth"],"mappings":"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","sourcesContent":["// Import the functions from the SDKs\n\nimport React, { useState } from 'react'\nimport { db, auth } from '../firebase/firebase';\nimport firebase from 'firebase/compat/app';\n\nimport {storage} from '../firebase/firebase';\n\nimport { Input, Button } from '@mui/material/'\n\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\n\nconst SendMessage = ({ scroll }) => {\n\n    const [input, setInput] = useState(\"\");\n    const [showEmojis, setShowEmojis] = useState(false);\n\n    // Add emojis function\n\n    const addEmoji = (e) => {\n        let sym = e.unified.split(\"-\");\n        let codesArray = [];\n        sym.forEach((el) => codesArray.push(\"0x\" + el));\n        let emoji = String.fromCodePoint(...codesArray);\n        setInput(input + emoji);\n    };\n\n     // form on submit send message function \n\n    const sendMessage = (e) => {\n\n        // if(input.trim().length === 0) {\n        //     return;\n        // }\n        e.preventDefault()\n        const { uid, photoURL } = auth.currentUser\n\n        const file = e.target[0].files[0];\n        console.log(file);\n\n        const uploadFiles = () => {\n            const uploadTask = storage.ref(`files/${file.name}`).put(file);\n            uploadTask.on('state_change', snapshot => {\n\n            }, error => console.log(error),\n            ()=> {\n                storage\n                    .ref(\"files\")\n                    .child(files.name)\n                    .getDownloadURL()\n                    .then((url)=> {\n                        console.log(url);\n                    })\n            })\n        }\n        //add the form details to the database\n        db.collection('messages').add({\n            text: input,\n            photoURL,\n            uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setInput('')\n        scroll.current.scrollIntoView({ behavior: 'smooth' })\n    };\n\n    \n    \n    \n    \n    return (\n        <div>\n            <form onSubmit={sendMessage}>\n                <div className=\"sendMsg\">\n  \n           \n                <input type=\"file\"/>\n\n\n                    <Button className=\"button\" onClick={() => setShowEmojis(!showEmojis)}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"icon\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                            >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                            />\n                        </svg>\n                    </Button>\n                    \n                    <Input style={{ width: '78%', fontSize: '15px', fontWeight: '550', marginLeft: '5px', marginBottom: '-3px' }} placeholder='Message...' type=\"text\" \n                        value={input} onChange={(e) => setInput(e.target.value)}\n                    />\n                    \n                    <Button style={{ width: '18%', fontSize: '15px', fontWeight: '550', margin: '4px 5% -13px 5%', maxWidth: '200px'}} type=\"submit\">Send</Button>\n                    {showEmojis && (\n                        <div>\n                        <Picker onSelect={addEmoji} />\n                        </div>\n                    )}\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SendMessage"]},"metadata":{},"sourceType":"module"}