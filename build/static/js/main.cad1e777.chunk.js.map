{"version":3,"sources":["firebase/firebase.js","components/SendMessage.js","components/SignOut.js","components/Chat.js","components/SignIn.js","App.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","SendMessage","scroll","useState","input","setInput","showEmojis","setShowEmojis","storage","getStorage","onSubmit","e","preventDefault","currentUser","uid","photoURL","file","target","files","storageRef","ref","name","uploadTask","uploadBytesResumable","on","snapshot","error","getDownloadURL","then","downloadURL","collection","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","uploadFiles","trim","text","className","type","Button","onClick","xmlns","fill","viewBox","stroke","d","Input","style","width","fontSize","fontWeight","marginLeft","marginBottom","placeholder","value","onChange","margin","maxWidth","onSelect","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","SignOut","display","justifyContent","position","backgroundColor","top","borderBottom","zIndex","signOut","Chat","useRef","messages","setMessages","useEffect","orderBy","limit","onSnapshot","docs","map","doc","data","id","src","alt","SignIn","height","alignItems","padding","borderRadius","provider","GoogleAuthProvider","signInWithPopup","App","useAuthState","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cad1e777.chunk.js","sourcesContent":["// Import the functions from the SDKs\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nimport \"firebase/compat/database\";\n\n\n//web app's Firebase configuration\nconst config = {\n    apiKey: \"AIzaSyBByBUddjoqRf5mwMP-o4Ueg5jG7RMd9GU\",\n    authDomain: \"react-chat-app-ce948.firebaseapp.com\",\n    projectId: \"react-chat-app-ce948\",\n    storageBucket: \"react-chat-app-ce948.appspot.com\",\n    messagingSenderId: \"911721171669\",\n    appId: \"1:911721171669:web:abe372a4edd0d468cc705c\",\n    measurementId: \"G-07221R6KQR\"\n  };\n  \n  // Initialize Firebase\n  \n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  } else {\n    firebase.app();\n  }\n  \n  export const db = firebase.firestore();\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n  export const storage = firebase.firestore();\n  \n  export default firebase;","// Import the functions from the SDKs\n\nimport React, { useState } from 'react'\nimport { db, auth } from '../firebase/firebase';\nimport firebase from 'firebase/compat/app';\n\nimport { getStorage, ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\n\nimport { Input, Button } from '@mui/material/'\n\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\n\nconst SendMessage = ({ scroll }) => {\n\n    const [input, setInput] = useState(\"\");\n    const [showEmojis, setShowEmojis] = useState(false);\n\n    const storage = getStorage();\n\n    // Add emojis function\n\n    const addEmoji = (e) => {\n        let sym = e.unified.split(\"-\");\n        let codesArray = [];\n        sym.forEach((el) => codesArray.push(\"0x\" + el));\n        let emoji = String.fromCodePoint(...codesArray);\n        setInput(input + emoji);\n    };\n\n     // form on submit send message function \n\n    const sendMessage = (e) => {\n        \n        \n\n        // if(input.trim().length === 0) {\n        //     return;\n        // }\n\n        e.preventDefault()\n        const { uid, photoURL } = auth.currentUser\n\n        const uploadFiles = (file) => {\n            const storageRef = ref(storage, file.name);\n\n            const uploadTask = uploadBytesResumable(storageRef, file);\n\n            // Register three observers:\n            // 1. 'state_changed' observer, called any time the state changes\n            // 2. Error observer, called on failure\n            // 3. Completion observer, called on successful completion\n            uploadTask.on('state_changed', \n            (snapshot) => {\n                // Observe state change events such as progress, pause, and resume\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                // const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                // console.log('Upload is ' + progress + '% done');\n                // switch (snapshot.state) {\n                // case 'paused':\n                //     console.log('Upload is paused');\n                //     break;\n                // case 'running':\n                //     console.log('Upload is running');\n                //     break;\n                // }\n            }, \n            (error) => {\n                // Handle unsuccessful uploads\n            }, \n            () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n\n                    db.collection('messages').add({\n                        photoURL,\n                        downloadURL,\n                        uid,\n                        createdAt: firebase.firestore.FieldValue.serverTimestamp()\n                    })\n                    setInput('')\n                    scroll.current.scrollIntoView({ behavior: 'smooth' })\n                });\n            }\n            );\n        };\n        \n        \n\n        const file = e.target[0].files[0];\n        if(file) {\n            uploadFiles(file);\n        }\n\n        //add the form details to the database\n        if(input.trim().length !== 0) {\n            db.collection('messages').add({\n                text: input,\n                photoURL,\n                uid,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            })\n            setInput('')\n            scroll.current.scrollIntoView({ behavior: 'smooth' })\n        }\n    };\n\n    \n    \n    \n    \n    return (\n        <div>\n            <form onSubmit={sendMessage}>\n                <div className=\"sendMsg\">\n  \n            <input type=\"file\" />\n\n\n                    <Button className=\"button\" onClick={() => setShowEmojis(!showEmojis)}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"icon\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                            >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                            />\n                        </svg>\n                    </Button>\n                    \n                    <Input style={{ width: '78%', fontSize: '15px', fontWeight: '550', marginLeft: '5px', marginBottom: '-3px' }} placeholder='Message...' type=\"text\" \n                        value={input} onChange={(e) => setInput(e.target.value)}\n                    />\n                    \n                    <Button style={{ width: '18%', fontSize: '15px', fontWeight: '550', margin: '4px 5% -13px 5%', maxWidth: '200px'}} type=\"submit\">Send</Button>\n                    {showEmojis && (\n                        <div>\n                        <Picker onSelect={addEmoji} />\n                        </div>\n                    )}\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SendMessage","// Import the functions from the SDKs\n\nimport React from 'react'\nimport { auth } from '../firebase/firebase';\nimport Button from '@mui/material/Button'\n\nconst SignOut = () => {\n    \n    return (\n        <div style={{\n            display: 'flex', justifyContent: 'center', position: 'fixed', width: '100%', backgroundColor: '#FAFAFA', top: 0, borderBottom: 'solid 1px lightgray', zIndex: '10'\n        }}>\n            <Button onClick={() => auth.signOut()}>Sign Out</Button>\n        </div>\n    )\n}\n\nexport default SignOut","// Import the functions from the SDKs\nimport React, { useState, useEffect, useRef } from 'react'\nimport { db, auth } from '../firebase/firebase';\nimport SendMessage from './SendMessage'\nimport SignOut from './SignOut'\n\nconst  Chat = () => {\n    const scroll = useRef()\n    \n    const [messages, setMessages] = useState([])\n    useEffect(() => {\n        db.collection('messages').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n            setMessages(snapshot.docs.map(doc => doc.data()))\n        })\n    }, [])\n    \n    return (\n        <div>\n            <SignOut />\n            <div className=\"msgs\">\n                {messages.map(({ id, text, photoURL, uid, downloadURL }) => (\n                    <div>\n                        <div key={id} className={`msg ${uid === auth.currentUser.uid ? 'sent' : 'received'}`}>\n                            <img src={photoURL} alt=\"\" />\n                            {downloadURL ? (\n                                <img src={downloadURL} alt=\"\"/>\n                            ) : (\n                                <p>{text}</p>\n                            )}\n                            \n                        </div>\n                    </div>\n                ))}\n            </div>\n            <SendMessage scroll={scroll} />\n            <div ref={scroll}></div>\n        </div>\n    )\n}\n\nexport default Chat","// Import the functions from the SDKs\nimport React from 'react'\nimport firebase from 'firebase/compat/app';\nimport { auth } from '../firebase/firebase';\n\nimport Button from '@mui/material/Button'\n\nconst SignIn = () => {\n\n    // Signin with google function \n    const signInWithGoogle = () => {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        auth.signInWithPopup(provider)\n    }\n    \n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', height: '100vh', alignItems: 'center' }}>\n            <Button style={{ padding: '30px', fontSize: '20px', borderRadius: '0', fontWeight: '600' }} onClick={signInWithGoogle}>Sign In With Google</Button>\n        </div>\n    )\n}\n\nexport default SignIn","// Import the functions from the SDKs\nimport React from 'react';\nimport './App.css';\nimport Chat from './components/Chat';\nimport SignIn from './components/SignIn';\nimport { auth } from './firebase/firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction App() {\n  const [user] = useAuthState(auth)\n  return (\n    <>\n      {user ? <Chat /> : <SignIn />}\n    </> \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}